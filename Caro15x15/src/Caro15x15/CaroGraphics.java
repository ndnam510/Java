/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Caro15x15;

import java.awt.*;
import javax.swing.*;

/**
 *
 * @author Admin
 */
public class CaroGraphics extends javax.swing.JFrame 
{

    /**
     * Creates new form Graphics
     */
    
    public CaroGraphics() 
    {
        initComponents();
        setResizable(false);
    }

    public void khoitao()
    {
        Pplay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(52, 254, 52)));

        javax.swing.GroupLayout PplayLayout = new javax.swing.GroupLayout(Pplay);
        Pplay.setLayout(PplayLayout);
        PplayLayout.setHorizontalGroup(
            PplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        PplayLayout.setVerticalGroup(
            PplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Pplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.valueOf(String.valueOf(n*40)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Pplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.valueOf(String.valueOf(n*40)))
                .addContainerGap())
        );
        Pplay.setMinimumSize(new Dimension(600, 600));
        Pplay.setMaximumSize(new Dimension(600, 600));
        Pplay.removeAll();
        Pplay.setLayout(new GridLayout(n, n));
        delktxo();
        for(int i = 1; i <= n; i++)
        {
            for(int j = 1; j <= n; j++)
            {
                block[i][j] = new XOJLabel(i,j);
                if (i == 1) 
                {
                    if (j == 1)
                        // vẽ điểm ở Trái Trên
                        block[i][j].setBorder(BorderFactory.createLineBorder(Color.BLACK));
                    else
                        // vẽ đường viền ở Trên
                         block[i][j].setBorder(BorderFactory.createMatteBorder(border, 
                                                                0, 
                                                                border, 
                                                                border, 
                                                                Color.BLACK));
                }
                else
                {
                    if (j == 1) 
                    {
                        // vẽ đường viền ở Trái
                        block[i][j].setBorder(BorderFactory.createMatteBorder(0, 
                                                                border, 
                                                                border, 
                                                                border, 
                                                                Color.BLACK));
                    }
                    else 
                    {
                        //// vẽ đường viền ở những vị trí khác
                        block[i][j].setBorder(BorderFactory.createMatteBorder(0, 
                                                                0, 
                                                                border, 
                                                                border, 
                                                                Color.BLACK));
                    }
                }
                Pplay.add(block[i][j]);
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        L2 = new javax.swing.JLabel();
        txt2 = new javax.swing.JTextField();
        Bexit = new javax.swing.JButton();
        Bnew = new javax.swing.JButton();
        Blose = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        L1 = new javax.swing.JLabel();
        txt1 = new javax.swing.JTextField();
        Bpvp = new javax.swing.JButton();
        Bpvc = new javax.swing.JButton();
        txtcdc = new javax.swing.JTextField();
        Bhiepmoi = new javax.swing.JButton();
        CBnum = new javax.swing.JComboBox<>();
        Icon1 = new javax.swing.JLabel();
        Icon2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Caro Game");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setEnabled(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        L2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        L2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        L2.setText("O:");
        jPanel2.add(L2, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 307, 140, 20));

        txt2.setEditable(false);
        txt2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt2.setToolTipText("Điểm của Người chơi 2 / Com");
        txt2.setEnabled(false);
        jPanel2.add(txt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 333, 90, 30));

        Bexit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Bexit.setText("Thoát game");
        Bexit.setToolTipText("Thoát khỏi game");
        Bexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BexitActionPerformed(evt);
            }
        });
        jPanel2.add(Bexit, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 530, 110, -1));

        Bnew.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Bnew.setText("Trận mới");
        Bnew.setToolTipText("Tạo trận đấu mới");
        Bnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BnewActionPerformed(evt);
            }
        });
        jPanel2.add(Bnew, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, 110, -1));

        Blose.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Blose.setText("Bỏ cuộc");
        Blose.setToolTipText("Bỏ cuộc ở hiệp này");
        Blose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BloseActionPerformed(evt);
            }
        });
        jPanel2.add(Blose, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, 110, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Kích thước:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Chế độ chơi:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Tỷ số:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, -1, -1));

        L1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        L1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        L1.setText("X:");
        jPanel2.add(L1, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 230, 140, -1));

        txt1.setEditable(false);
        txt1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt1.setToolTipText("Điểm của Người chơi 1");
        txt1.setEnabled(false);
        jPanel2.add(txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 263, 90, 30));

        Bpvp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Bpvp.setText("PVP");
        Bpvp.setToolTipText("Người chơi Vs Người chơi");
        Bpvp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BpvpActionPerformed(evt);
            }
        });
        jPanel2.add(Bpvp, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 70, 30));

        Bpvc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Bpvc.setText("PVC");
        Bpvc.setToolTipText("Người chơi Vs Máy");
        Bpvc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BpvcActionPerformed(evt);
            }
        });
        jPanel2.add(Bpvc, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 70, 30));

        txtcdc.setEditable(false);
        txtcdc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtcdc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtcdc.setToolTipText("Chế độ đang chọn");
        txtcdc.setEnabled(false);
        jPanel2.add(txtcdc, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 90, 30));

        Bhiepmoi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Bhiepmoi.setText("Hiệp mới");
        Bhiepmoi.setToolTipText("Tạo hiệp đấu mới");
        Bhiepmoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BhiepmoiActionPerformed(evt);
            }
        });
        jPanel2.add(Bhiepmoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 110, -1));

        CBnum.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CBnum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3x3", "4x4", "5x5", "6x6", "7x7", "8x8", "9x9", "10x10", "11x11", "12x12", "13x13", "14x14", "15x15" }));
        CBnum.setToolTipText("Chọn kích thước bàn cờ");
        CBnum.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.add(CBnum, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 90, 30));

        Icon1.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
        Icon1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Icon1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Icon1.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);
        Icon1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Icon1.setIconTextGap(0);
        Icon1.setMaximumSize(new java.awt.Dimension(30, 30));
        Icon1.setMinimumSize(new java.awt.Dimension(30, 30));
        Icon1.setPreferredSize(new java.awt.Dimension(30, 30));
        Icon1.setRequestFocusEnabled(false);
        Icon1.setVerifyInputWhenFocusTarget(false);
        jPanel2.add(Icon1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 30, 30));

        Icon2.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
        Icon2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Icon2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Icon2.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);
        Icon2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Icon2.setIconTextGap(0);
        Icon2.setRequestFocusEnabled(false);
        Icon2.setVerifyInputWhenFocusTarget(false);
        jPanel2.add(Icon2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 30, 30));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setMaximumSize(new java.awt.Dimension(610, 610));
        jPanel3.setMinimumSize(new java.awt.Dimension(610, 610));
        jPanel3.setPreferredSize(new java.awt.Dimension(610, 610));
        jPanel3.setRequestFocusEnabled(false);
        jPanel3.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 608, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 51)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51))));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Caro15x15/playerX.gif"))); // NOI18N
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 220));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Caro15x15/playerO.gif"))); // NOI18N
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 170, 230));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Caro15x15/vs.png"))); // NOI18N
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 220, 210, 190));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BexitActionPerformed
        // TODO add your handling code here:
        exit();
    }//GEN-LAST:event_BexitActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        exit();
    }//GEN-LAST:event_formWindowClosing

    private void BnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BnewActionPerformed
        // TODO add your handling code here:
        n = 3; m2 = 3;to = 0; tx = 0; num = 0;
        if(ktp != 0)
        {
            if(ktp == 1)
            {
                String ten1, ten2;
                do
                {
                    ten1 = JOptionPane.showInputDialog(this,"Nhập tên người chơi 1:","Player 1 'S Name",JOptionPane.INFORMATION_MESSAGE);
                    if(!ten1.equals(null) && !ten1.equals(""))
                    {
                        do
                        {
                            ten2 = JOptionPane.showInputDialog(this,"Nhập tên người chơi 2:","Player 2 'S Name",JOptionPane.INFORMATION_MESSAGE);
                            if(!ten2.equals(null) && ! ten2.equals(""))
                            {
                                L1.setText(ten1); 
                                L2.setText(ten2); 
                            }
                        }while(ten2.equals(null) || ten2.equals(""));
                    }
                }while(ten1.equals(null) || ten1.equals(""));
            }
            else if(ktp == 2)
            {
                String ten;
                do
                {
                    ten = JOptionPane.showInputDialog(this,"Nhập tên người chơi 1:","Player 1 'S Name",JOptionPane.INFORMATION_MESSAGE);
                    if(!ten.equals(null) && !ten.equals(""))
                    {
                        L1.setText(ten); 
                        L2.setText("Com");
                        txt1.setText("");
                        txt2.setText("");
                    }
                }while(ten.equals(null) || ten.equals(""));
            }
            start = 1;
            user = -1;
            n = 3 + CBnum.getSelectedIndex();
            m2 = 3 + CBnum.getSelectedIndex();
            if(m2 > 4) m2 = 5;
            txt1.setEnabled(true);
            txt1.setText("0");
            txt2.setEnabled(true);
            txt2.setText("0");
            Icon1.setIcon(new ImageIcon(this.getClass().getResource("active.png")));
            Icon2.setIcon(new ImageIcon(this.getClass().getResource("active.png")));
            Icon1.setEnabled(true);
            Icon2.setEnabled(false);
            khoitao();
        }
        else
            JOptionPane.showMessageDialog(this, "Vui lòng Chọn chế độ chơi!", "Lỗi khởi động Game",JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_BnewActionPerformed
    
    private void BloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BloseActionPerformed
        // TODO add your handling code here:
        if(start == 1)
        {
            if(ktp == 1)
            {
                if(user == 0)
                {
                    int b = JOptionPane.showConfirmDialog(this, "Người chơi " 
                                            + L1.getText() + " Chắc chắn muốn bỏ cuộc?"
                                            , "Cảnh báo", JOptionPane.YES_NO_OPTION);
                    if(b == JOptionPane.YES_OPTION)
                    {
                        user = -1; // reset user
                        win = false;
                        Icon1.setEnabled(true);
                        Icon2.setEnabled(false);
                        del();
                        txt2.setText(String.valueOf(++to));
                    }
                }
                else if(user == 1)
                {
                    int b = JOptionPane.showConfirmDialog(this, "Người chơi " 
                                            + L2.getText() + " Chắc chắn muốn bỏ cuộc?"
                                            , "Cảnh báo", JOptionPane.YES_NO_OPTION);
                    if(b == JOptionPane.YES_OPTION)
                    {
                        user = -1; // reset user
                        win = false;
                        Icon1.setEnabled(true);
                        Icon2.setEnabled(false);
                        del();
                        txt1.setText(String.valueOf(++tx));
                    }
                }
            }
            else if(ktp == 2)
            {
                int b = JOptionPane.showConfirmDialog(this, "Người chơi " 
                                        + L1.getText() + " Chắc chắn muốn bỏ cuộc?"
                                        , "Cảnh báo", JOptionPane.YES_NO_OPTION);
                if(b == JOptionPane.YES_OPTION)
                {
                    user = -1; // reset user
                    win = false;
                    Icon1.setEnabled(true);
                    Icon2.setEnabled(false);
                    del();
                    txt2.setText(String.valueOf(++to));
                }
            }
        }
    }//GEN-LAST:event_BloseActionPerformed

    private void BpvpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BpvpActionPerformed
        // TODO add your handling code here:
        ktp = 1;
        txtcdc.setText("PVP");
        txtcdc.setEnabled(true);
    }//GEN-LAST:event_BpvpActionPerformed

    private void BpvcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BpvcActionPerformed
        // TODO add your handling code here:
        ktp = 2;
        txtcdc.setText("PVC");
        txtcdc.setEnabled(true);
    }//GEN-LAST:event_BpvcActionPerformed

    private void BhiepmoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BhiepmoiActionPerformed
        // TODO add your handling code here:
        if(start == 1)
        {
            int b = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn Làm Hiệp Mới?","Thông báo", JOptionPane.YES_NO_OPTION);
            if(b == JOptionPane.YES_OPTION)
            {
                user = -1; // reset user
                win = false;
                Icon1.setEnabled(true);
                Icon2.setEnabled(false);
                del();
                n = 3 + CBnum.getSelectedIndex();
                m2 = 3 + CBnum.getSelectedIndex();
                if(m2 > 4) m2 = 5;
                num = 0;
                khoitao();
            }
        }
    }//GEN-LAST:event_BhiepmoiActionPerformed

    
    public void exit()
    {
        int b = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thoát?","Cảnh báo Thoát Game", JOptionPane.WARNING_MESSAGE);
        if(b == JOptionPane.YES_OPTION)
        {
            System.exit(0);
        }
    }
    
    public static String getL1()
    {
        return L1.getText();
    }
    public static String getL2()
    {
        return L2.getText();
    }
    public static void del()
    {
        delktxo();
        num = 0;
        for(int i = 1; i <= n; i++)
            for(int j = 1; j <= n; j++)
                block[i][j].setIcon(null);
    }
    public static void delktxo()
    {
        for(int i = 0; i <= n+1; i++)
            for(int j = 0; j <= n+1; j++)
            {
                ktxo[i][j] = 0;
            }
    }
    public static void XMove(int i, int j)
    {
        block[i][j].setIcon(XOJLabel.X);
        ktxo[i][j] = 1;
        Icon2.setEnabled(true);
        Icon1.setEnabled(false);
    }
    public static void OMove(int i, int j)
    {
        block[i][j].setIcon(XOJLabel.O);
        ktxo[i][j] = 2;
        Icon1.setEnabled(true);
        Icon2.setEnabled(false);
    }
    
    //AI Com Move
    public static int ComMove()
    {
        int m = 0;
        if(n % 2 == 0) m = n/2;
        else m = n/2 + 1;
        if(num == 1 && ktxo[m][m] == 0)
        {
            u = m; v = m;
            OMove(m, m);
            return 1;
        }
        if(FindWin()) return 1;
        if(Find(m2 - 1,1)) return 1;
        if(Find(m2 - 1,2)) return 1;
        if(Find(m2 - 2,2)) return 1;
        if(Find(m2 - 3,2)) return 1;
        if(Find(m2 - 4,2)) return 1;
        if(Find(m2 - 5,2)) return 1;
        return 0;
    }
    
    //kiểm tra nước đi Win (5 ô)
    public static boolean FindWin()
    {
        for(int i = 1; i <= n; i++)
            for(int j = 1; j <= n; j++)
            {
                if(ktxo[i][j] == 0)
                {
                    chan = 0; dem = 0;
                    ktxo[i][j] = 2;
                    if(checkWin(i, j) == 1)
                    {
                        u = i; v = j;
                        OMove(i, j);
                        return true;
                    }
                    else
                    {
                        chan = 0; dem =0;
                        ktxo[i][j] = 0;
                    }
                }
            }
        for(int i = 1; i <= n; i++)
            for(int j = 1; j <= n; j++)
            {
                if(ktxo[i][j] == 0)
                {
                    chan = 0; dem = 0;
                    ktxo[i][j] = 1;
                    if(checkWin(i, j) == 1)
                    {
                        u = i; v = j;
                        OMove(i, j);
                        return true;
                    }
                    else
                    {
                        chan = 0; dem = 0;
                        ktxo[i][j] = 0;
                    }
                }
            }
        return false;
    }
    
    //kiểm tra nước đi đc k ô
    public static boolean Find(int k, int l)
    {
        for(int i = 1; i <= n; i++)
            for(int j = 1; j <= n; j++)
            {
                if(ktxo[i][j] == 0)
                {
                    chan = 0; dem = 0;
                    ktxo[i][j] = 2;
                    checkColup(2, 1, i, j);
                    if(dem >= k && chan < l)
                    {
                        u = i; v = j;
                        OMove(i, j);
                        return true;
                    }
                    else
                    {
                        chan = 0; dem = 0;
                        ktxo[i][j] = 1;
                        checkColup(1, 2, i, j);
                        if(dem >= k && chan < l)
                        {
                            u = i; v = j;
                            OMove(i, j);
                            return true;
                        }
                        else
                        {
                            chan = 0; dem = 0;
                            ktxo[i][j] = 2;
                            checkRowup(2, 1, i, j);
                            if(dem >= k && chan < l)
                            {
                                u = i; v = j;
                                OMove(i, j);
                                return true;
                            }
                            else
                            {
                                chan = 0; dem = 0;
                                ktxo[i][j] = 1; 
                                checkRowup(1, 2, i, j);
                                if(dem >= k && chan < l)
                                {
                                    u = i; v = j;
                                    OMove(i, j);
                                    return true;
                                }
                                else
                                {
                                    chan = 0; dem = 0;
                                    ktxo[i][j] = 2;
                                    checkCheoChinhup(2, 1, i, j);
                                    if(dem >= k && chan < l)
                                    {
                                        u = i; v = j;
                                        OMove(i, j);
                                        return true;
                                    }
                                    else
                                    {
                                        chan = 0; dem = 0;
                                        ktxo[i][j] = 1;
                                        checkCheoChinhup(1, 2, i, j);
                                        if(dem >= k && chan < l)
                                        {
                                            u = i; v = j;
                                            OMove(i, j);
                                            return true;
                                        }
                                        else
                                        {
                                            chan = 0; dem = 0;
                                            ktxo[i][j] = 2;
                                            checkCheoPhuup(2, 1, i, j);
                                            if(dem >= k && chan < l)
                                            {
                                                u = i; v = j;
                                                OMove(i, j);
                                                return true;
                                            }
                                            else
                                            {
                                                chan = 0; dem = 0;
                                                ktxo[i][j] = 1;
                                                checkCheoPhuup(1, 2, i, j);
                                                if(dem >= k && chan < l)
                                                {
                                                    u = i; v = j;
                                                    OMove(i, j);
                                                    return true;
                                                }
                                                else
                                                {
                                                    chan = 0; dem = 0;
                                                    ktxo[i][j] = 0;
                                                }
                                            }
                                        }
                                    }
                                }
                            }                   
                        }
                    }
                }
            }
        return false;
    }
            
    //Kiểm tra Win
    public static int checkWin(int i, int j)
    {
        int x = 0, y = 0;
        win = false;
        dem = 0;
        chan = 0;
        if(ktxo[i][j] == 1)
        {
            x = 1;
            y = 2;
        }
        else if(ktxo[i][j] == 2)
        {
            x = 2;
            y = 1;
        }
        
        checkColup(x, y, i, j);
        if(win) return 1;
        else 
        {
            chan = 0; dem = 0;
            checkRowup(x, y, i, j);
        }
        if(win) return 1;
        else 
        {
            chan = 0; dem = 0;
            checkCheoChinhup(x, y, i, j);
        }
        if(win) return 1;
        else 
        {
            chan = 0; dem = 0;
            checkCheoPhuup(x, y, i, j);
        }
        if(win) return 1;
        else if(checkAll()) return 2;
        return 0;
    }
    
    //kiểm tra hàng dọc
    public static void checkColup(int x, int y, int k, int l)
    {
        if(ktxo[k][l] == y) 
        {
            chan++;
            dem = 0;
            checkColdown(x,y,k-1,l);
        }
        else if(ktxo[k][l] == x)
	{
            ++dem;
            if(k <= n)
            {
                checkColup(x,y,k+1,l);
            }
	}
        else if(dem == m2 && chan < 2) 
        {
            win = true;
        }
        else
        {
            dem = 0;
            checkColdown(x,y,k-1,l);
        }
    }
    //kiểm tra hàng dọc theo chiều giảm của i nếu kết thúc Colup nhưng chưa Win
    public static void checkColdown(int x, int y, int k, int l)
    {
        if(ktxo[k][l] == y) 
        {
            chan++;
            if(dem == m2 && chan < 2) 
            {
                win = true;
            }
        }
        else if(ktxo[k][l] == x)
	{
            ++dem;
            if(k > 0)
            {
                checkColdown(x,y,k-1,l);
            }
	}
        else if(dem == m2 && chan < 2) 
        {
            win = true;
        }
    }
    
    //kiểm tra hàng ngang
    public static void checkRowup(int x, int y, int k, int l)
    {
        if(ktxo[k][l] == y) 
        {
            chan++;
            dem = 0;
            checkRowdown(x,y,k,l-1);
        }
        else if(ktxo[k][l] == x)
	{
            ++dem;
            if(l <= n)
            {
                checkRowup(x,y,k,l+1);
            }
	}
        else if(dem == m2 && chan < 2) 
        {
            win = true;
        }
        else
        {
            dem = 0;
            checkRowdown(x,y,k,l-1);
        }
    }
    //kiểm tra hàng dọc theo chiều giảm của i nếu kết thúc Colup nhưng chưa Win
    public static void checkRowdown(int x, int y, int k, int l)
    {
        if(ktxo[k][l] == y) 
        {
            chan++;
            if(dem == m2 && chan < 2) 
            {
                win = true;
            }
        }
        else if(ktxo[k][l] == x)
	{
            ++dem;
            if(l > 0)
            {
                checkRowdown(x,y,k,l-1);
            }
	}
        else if(dem == m2 && chan < 2) 
        {
            win = true;
        }
    }
    
    //kiểm tra hàng chéo chính
    public static void checkCheoChinhup(int x, int y, int k, int l)
    {
        if(ktxo[k][l] == y) 
        {
            chan++;
            dem = 0;
            checkCheoChinhdown(x,y,k-1,l-1);
        }
        else if(ktxo[k][l] == x)
	{
            ++dem;
            if(l <= n && k <= n)
            {
                checkCheoChinhup(x,y,k+1,l+1);
            }
	}
        else if(dem == m2 && chan < 2) 
        {
            win = true;
        }
        else
        {
            dem = 0;
            checkCheoChinhdown(x,y,k-1,l-1);
        }
    }
    //kiểm tra hàng dọc theo chiều giảm của i nếu kết thúc Colup nhưng chưa Win
    public static void checkCheoChinhdown(int x, int y, int k, int l)
    {
        if(ktxo[k][l] == y) 
        {
            chan++;
            if(dem == m2 && chan < 2) 
            {
                win = true;
            }
        }
        else if(ktxo[k][l] == x)
	{
            ++dem;
            if(k > 0 && l > 0)
            {
                checkCheoChinhdown(x,y,k-1,l-1);
            }
	}
        else if(dem == m2 && chan < 2) 
        {
            win = true;
        }
    }

    //kiểm tra hàng chéo phụ
    public static void checkCheoPhuup(int x, int y, int k, int l)
    {
        if(ktxo[k][l] == y) 
        {
            chan++;
            dem = 0;
            checkCheoPhudown(x,y,k-1,l+1);
        }
        else if(ktxo[k][l] == x)
	{
            ++dem;
            if(k <= n && l > 0)
            {
                checkCheoPhuup(x,y,k+1,l-1);
            }
	}
        else if(dem == m2 && chan < 2) 
        {
            win = true;
        }
        else
        {
            dem = 0;
            checkCheoPhudown(x,y,k-1,l+1);
        }
    }
    //kiểm tra hàng dọc theo chiều giảm của i nếu kết thúc Colup nhưng chưa Win
    public static void checkCheoPhudown(int x, int y, int k, int l)
    {
        if(ktxo[k][l] == y) 
        {
            chan++;
            if(dem == m2 && chan < 2) 
            {
                win = true;
            }
        }
        else if(ktxo[k][l] == x)
	{
            ++dem;
            if(k > 0 && l <= n)
            {
                checkCheoPhudown(x,y,k-1,l+1);
            }
	}
        else if(dem == m2 && chan < 2) 
        {
            win = true;
        }
    }
    
    //kiểm tra nếu hết bàn cờ
    public static boolean checkAll()
    {
        for(int i = 1; i <= n; i++)
            for(int j = 1; j <= n; j++)
                if(ktxo[i][j] == 0)
                    return false;
        return true;
    }
    
    //Khai báo
    public static int n = 3, m1 = 0, m2 = 3, m3 = 0, ktp = 0, tx = 0, to = 0;
    /*
    n: Kích thước bàn cờ nxn ô
    
    m2: kiểm tra có đủ 5 ô win không
    */
    int size = 30; //kích thước px của mỗi ô
    int border = 1; //kích thước đường kẻ 1px
    int start = 0; //xác nhận trận mới start = 1
    public static byte user = -1; //người đi, -1 = null, 0 = X, 1 = Y
    JPanel Pplay = new JPanel(); //panel của bàn cờ
    static boolean win = false;
    static int num = 0; //kiểm tra số quân cờ đã được đánh
    static int chan = 0, dem = 0; //chan: Kiểu tra có bị chặn không
    static int u = 0, v = 0; //giữ lại dữ liệu i,j để gửi cho XOJLabel
    public static XOJLabel block[][] = new XOJLabel[16][16];
    public static int ktxo[][] = new int[17][17];
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bexit;
    private javax.swing.JButton Bhiepmoi;
    private javax.swing.JButton Blose;
    private javax.swing.JButton Bnew;
    private javax.swing.JButton Bpvc;
    private javax.swing.JButton Bpvp;
    private javax.swing.JComboBox<String> CBnum;
    public static javax.swing.JLabel Icon1;
    public static javax.swing.JLabel Icon2;
    private static javax.swing.JLabel L1;
    private static javax.swing.JLabel L2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton1;
    public static javax.swing.JTextField txt1;
    public static javax.swing.JTextField txt2;
    private javax.swing.JTextField txtcdc;
    // End of variables declaration//GEN-END:variables
}
