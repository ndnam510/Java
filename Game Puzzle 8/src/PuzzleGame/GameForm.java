/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PuzzleGame;

import java.awt.Dimension;
import java.awt.GridLayout;
import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author Phan Minh Quan - 57131810
 */
public class GameForm extends javax.swing.JFrame {

    /**
     * Creates new form GameForm
     */
    public GameForm() {
        initComponents();
        setResizable(false);
        khoitao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        bStart = new javax.swing.JButton();
        lbl1 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        bReset = new javax.swing.JButton();
        bExit = new javax.swing.JButton();
        lblLap = new java.awt.Label();
        lbl = new java.awt.Label();
        jSlider1 = new javax.swing.JSlider();
        lbl3 = new javax.swing.JLabel();
        txtKQ = new java.awt.TextArea();
        jLabel1 = new javax.swing.JLabel();
        lblRun2 = new javax.swing.JLabel();
        lblRun1 = new java.awt.Label();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Puzzle 8 Game");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 0)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 0))));
        jPanel3.setMaximumSize(new java.awt.Dimension(336, 338));
        jPanel3.setMinimumSize(new java.awt.Dimension(336, 338));

        jPanel4.setMaximumSize(new java.awt.Dimension(312, 312));
        jPanel4.setMinimumSize(new java.awt.Dimension(312, 312));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 312, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 314, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setMaximumSize(new java.awt.Dimension(292, 338));
        jPanel2.setMinimumSize(new java.awt.Dimension(292, 338));
        jPanel2.setPreferredSize(new java.awt.Dimension(292, 338));

        bStart.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bStart.setText("Bắt đầu");
        bStart.setToolTipText("Bắt đầu Tìm phương án và Thực hiện chương trình");
        bStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bStartActionPerformed(evt);
            }
        });

        lbl1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl1.setText("Số Vị trí sai:");
        lbl1.setToolTipText("Số vị trí sai khác hiện tại so với đáp án");

        lbl2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl2.setText("Số Bước đi:");
        lbl2.setToolTipText("Số bước đi đã Thực hiện");

        bReset.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bReset.setText("Reset");
        bReset.setToolTipText("Xóa mọi thứ trở về ban đầu");
        bReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetActionPerformed(evt);
            }
        });

        bExit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bExit.setText("Thoát");
        bExit.setToolTipText("Thoát Game");
        bExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExitActionPerformed(evt);
            }
        });

        lblLap.setAlignment(java.awt.Label.CENTER);
        lblLap.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblLap.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblLap.setMaximumSize(new java.awt.Dimension(58, 23));
        lblLap.setMinimumSize(new java.awt.Dimension(58, 23));

        lbl.setAlignment(java.awt.Label.CENTER);
        lbl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lbl.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbl.setMaximumSize(new java.awt.Dimension(58, 23));
        lbl.setMinimumSize(new java.awt.Dimension(58, 23));

        jSlider1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jSlider1.setForeground(new java.awt.Color(0, 0, 0));
        jSlider1.setMaximum(2000);
        jSlider1.setMinimum(100);
        jSlider1.setPaintLabels(true);
        jSlider1.setValue(1000);
        jSlider1.setMaximumSize(new java.awt.Dimension(0, 26));
        jSlider1.setMinimumSize(new java.awt.Dimension(0, 26));
        jSlider1.setPreferredSize(new java.awt.Dimension(0, 26));

        lbl3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl3.setText("Độ trễ: (0,1s - 2s)");
        lbl3.setToolTipText("Độ trễ của mỗi lần Thực hiện Bước đi, độ trễ càng thấp tốc độ càng cao");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PuzzleGame/Images/KQ.png"))); // NOI18N

        lblRun2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRun2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PuzzleGame/Images/Running.gif"))); // NOI18N
        lblRun2.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/PuzzleGame/Images/No9.png"))); // NOI18N
        lblRun2.setMaximumSize(new java.awt.Dimension(256, 256));
        lblRun2.setMinimumSize(new java.awt.Dimension(256, 256));
        lblRun2.setPreferredSize(new java.awt.Dimension(256, 256));
        lblRun2.setRequestFocusEnabled(false);

        lblRun1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblRun1.setText("Running...");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Đáp án");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(lbl1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(lbl2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblLap, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lbl3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bExit, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblRun2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRun1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(txtKQ, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(lbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtKQ, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblRun1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(lblRun2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(bStart, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bReset, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(bExit, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("By Phan Minh Quân - 57131810");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void khoitao() //Tạo dựng các ô số và những thông số khởi đầu của chương trình
    {
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(52, 254, 52)));

        javax.swing.GroupLayout PplayLayout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(PplayLayout);
        PplayLayout.setHorizontalGroup(
            PplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        PplayLayout.setVerticalGroup(
            PplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.valueOf(String.valueOf(n*100)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.valueOf(String.valueOf(n*100)))
                .addContainerGap())
        );
        jPanel4.setMinimumSize(new Dimension(312, 312));
        jPanel4.setMaximumSize(new Dimension(312, 312));
        jPanel4.removeAll();
        jPanel4.setLayout(new GridLayout(3, 3));
        delPA();
        for(int i = 1; i <= n*n; i++)
        {
            TB[i] = new BlockButtons(i);
            setIcon(i,i);
            jPanel4.add(TB[i]);
            a[i] = i; //Khởi tạo giá trị các cell
        }
        lbl.setText("0");
        lblLap.setText("0");
        ql = 0;
        txtKQ.setText("");
        Running(false);
    }
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        exit();
    }//GEN-LAST:event_formWindowClosing

    private void bStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bStartActionPerformed
        // TODO add your handling code here:
        Play();
    }//GEN-LAST:event_bStartActionPerformed

    private void bResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetActionPerformed
        // TODO add your handling code here:
        khoitao();
    }//GEN-LAST:event_bResetActionPerformed

    private void bExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExitActionPerformed
        // TODO add your handling code here:
        exit();
    }//GEN-LAST:event_bExitActionPerformed

    public void exit() //Thông báo thoát Trò chơi
    {
        int b = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thoát?","Cảnh báo Thoát Game", JOptionPane.WARNING_MESSAGE);
        if(b == JOptionPane.YES_OPTION)
        {
            System.exit(0);
        }
    }
    
    public void Win() //Thông báo chiến thắng
    {
        delPA();
        ql = 0;
        JOptionPane.showMessageDialog(this, "Chương trình hoàn tất!",
                "Congratulation!",JOptionPane.PLAIN_MESSAGE,
                new javax.swing.ImageIcon(getClass().getResource("/PuzzleGame/Images/SmileIcon.png")));
    }
    
    public void setIcon(int i, int j) //Tạo giao diện Icon cho các ô số
    {
        if(j != 9) 
        {
            TB[i].setLabel(String.valueOf(j));
            TB[i].setBackground(new java.awt.Color(204, 204, 255));
        }
        else 
        {
            TB[i].setLabel("");
            TB[i].setBackground(new java.awt.Color(255, 255, 255));
        }
    }
    
    public static String ktra(int i)
    {
        if(a[9] == i+3) return "d"; //down
        else if(a[9] == i-3) return "u"; //up
        else if(a[9] == i-1 && (i != 1 && i != 4 && i != 7)) return "l"; //left
        else if(a[9] == i+1 && (i % 3 != 0)) return "r"; //right
        else return "null";
    }
    
    public void DoiViTri(int j) //Chương trình thực thi nước đi
    {
        if(ktra(j) != "null")
        {
            for(int i = 1; i <= n*n; i++)
                if(a[i] == j)
                {
                    int t = a[9];
                    a[9] = j;
                    a[i] = t;
                    setIcon(j,9);
                    setIcon(t, i);
                    break;
                }
        }
    }
    
    public boolean DoiViTriOpen(int j) //chương trình kiểm thử nước đi
    {
        if(ktra(j) != "null")
        {
            for(int i = 1; i <= n*n; i++)
                if(a[i] == j)
                {
                    int t = a[9];
                    a[9] = j;
                    a[i] = t;
                    return true;
                }
        }
        return false;
    }
    
    public static int saiso() //chương trình kiểm tra còn bao nhiêu vị trí sai
    {
        int s = 0;
        for(int i = 1; i <= n*n; i++)
            {
                if(a[i] != i) 
                {
                    s++;
                }
            }
        return s;
    }
    
    public void Play() //chương trình thực thi các nước đi
    {
        long StartTime = System.currentTimeMillis();
        Running(true);
        for(int i = 1; i <= n*n; i++)
        {
            bd[i] = a[i];
        }
        if(TimDA())
        {
            long EndTime = System.currentTimeMillis();
            int b = JOptionPane.showConfirmDialog(this, "Chương trình đã tìm ra được đáp án với:\n"
                    + "+ Số Bước đi: " + d + "\n"
                    + "+ Số Bước quay lui: " + ql/2 + "\n"
                    + "+ Thời gian: " + (EndTime - StartTime) + " miligiay\n"
                    + "\t**** Bạn có muốn Thực hiện chương trình? ****\n"
                    + "\t Chương trình thực hiện gồm: " + qi + " Bước đi.\n\n"
                    + "**Cảnh báo: Không thể Dừng hay làm bất cứ thao tác nào trong quá trình Thực hiện chương trình\n"
                            + " cho đến khi kết thúc. Lưu ý Thay đổi Độ trễ phù hợp trước khi lặp lại thao tác.",
                    "Hoàn tất tìm kiếm Phương Án!", JOptionPane.WARNING_MESSAGE);
            
            txtKQ.setText("* Chương trình đã tìm ra được đáp án với:\n"
                    + "+ Số Bước đi: " + d + "\n"
                    + "+ Số Bước quay lui: " + ql/2 + "\n"
                    + "+ Thời gian: " + (EndTime - StartTime) + " miligiay\n"
                    + "* Chương trình thực hiện gồm: \n\t" + qi+ " Bước đi.");
            
            Running(false);
            
            for(int i = 1; i <= n*n; i++)
            {
                a[i] = bd[i];
            }
            
            if(b == JOptionPane.YES_OPTION)
            {   
                Delay(1000);
                ChayDA();
            }
            else
            {
                ql = 0;
                d = 0;
                qi = 0;
                delPA();
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Khó quá rồi ! Giải không ra !!!",
                "Chịu Thua!!!",JOptionPane.WARNING_MESSAGE,
                new javax.swing.ImageIcon(getClass().getResource("/PuzzleGame/Images/WorryIcon.png")));
        }
    }
    
    public boolean TimDA()
    {
        int min;
        while(saiso() != 0)
        {            
            min = saiMin();
            System.out.printf("sai[] = %s\n",Arrays.toString(sai));
            System.out.printf("min = %d\n", min);
            KiemThu(min);            
            if(min != 10)
            {
                for(int i = 0; i < n*n; i++)
                {
                    if(sai[i] == min)
                    {
                        {
                            DoiViTriOpen(i+1);
                            GiuPA();
                            break;
                        }
                    }
                }
            }
            d++;
            if(ci == 999999)
            {
                break;
            }
        }
        if(saiso() == 0) return true;
        else return false;
    }
    public void ChayDA()
    {
        int j = 0;
        while(j < qi)
        {
            for(int i = 1; i <= n*n; i++)
            {
                a[i] = c[q[j]][i];
                setIcon(a[i], i);
            }
            j++;
            lblLap.setText(String.valueOf(j));
            lbl.setText(String.valueOf(saiso()));
            if(saiso() == 0) Win();
            Delay(jSlider1.getValue());
        }
    }
    
    public void GiuPA() //giữ các thế cờ đã đi để không lặp lại
    {
        for(int i = 1; i <= n*n; i++)
        {
            c[ci][i] = a[i];
        }
        ci++;
        qi++;
        q[qi] = ci;
    }
    public boolean ktraPA() //ktra các thế cờ đã tồn tại hay chưa: true = đã tồn tại; false = chưa tồn tại
    {
        int t = 0;
        for(int i = 0; i <= ci; i++)
        {
            for(int j = 1; j <= n*n; j++)
            {
                if(c[i][j] == a[j]) t++;
            }
            if(t == 9) return true;
            else t = 0;
        }
        return false;
    }
    public void delPA() //xóa các PA cũ để thực thi chương trình mới
    {
        for(int i = 0; i <= ci; i++)
        {
            for(int j = 1; j <= n*n; j++)
            {
                c[i][j] = 0; 
            }
        }
        ci = 0;
        qi = 0;
    }
    public void QuayLuiPA() //Quay trở về PA trước, dùng để quay lui
    {
        qi--;
        for(int j = 1; j <= n*n; j++)
        {
            a[j] = c[q[qi]][j];
        }
    }
    
    public int saiMin() //Tìm ra sai số nhỏ nhất trong các phương án có thể
    {
        for(int i = 1; i <= n*n; i++)
        {
            b[i] = a[i];
        }
        for(int i = 1; i <= n*n; i++)
        {
            if(DoiViTriOpen(i))
            {
                if(ktraPA()) sai[i-1] = 10;
                else sai[i-1] = saiso();
            }
            else sai[i-1] = 10;
            for(int j = 1; j <= n*n; j++)
            {
                a[j] = b[j];
            }
        }
        return Arrays.stream(sai).min().getAsInt();
    }
    
    public void KiemThu(int min) //Kiểm tra các phương án có thể xảy ra trong quá trình quay lui
    {
       while(min == 10)
        {
            if(qi > 0) QuayLuiPA();
            min = saiMin();
            ql++;
        }
    }
    
    public void Running(boolean b)
    {
        lblRun1.setVisible(b);
        lblRun2.setVisible(b);
    }
    
    public void Delay(int i) //Tạo độ trễ cho chương trình trong i mili giây
    {
        try 
        {
            Thread.sleep(i);
        } 
        catch (InterruptedException ex) 
        {
            Thread.currentThread().interrupt();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    
    //Khai báo và khởi tạo các thông số của chương trình
    static int n = 3; //Kích thước trò chơi (nxn = 3x3)
    int d = 0; //Số vòng lặp của AI trong khi tìm đáp án
    int ci = 0; //trị số i trong c[i][]
    int qi = 0; //trị số i trong q[qi]
    int ql = 0; //số lần quay lui
    public static BlockButtons TB[]= new BlockButtons[10]; //khai báo các ô số
    public static int kt; //kiểm tra ô số được chọn
    static int a[] = new int[10]; //mảng chính lưu trữ các ô số và vị trí
    int b[] = new int[10]; //mảng phụ của a
    int bd[] = new int[10]; //mảng chứa dữ liệu bắt đầu (sau khi trộn)
    int sai[] = new int[9]; //mảng kiểm tra để tìm sai số min
    int c[][] = new int[1000000][10]; //mảng lưu trữ các thế cờ đã đi
    int q[] = new int[1000000]; //mảng sử dụng để quay lui thay thế cho ci
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bExit;
    private javax.swing.JButton bReset;
    private javax.swing.JButton bStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSlider jSlider1;
    private java.awt.Label lbl;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private java.awt.Label lblLap;
    private java.awt.Label lblRun1;
    private javax.swing.JLabel lblRun2;
    private java.awt.TextArea txtKQ;
    // End of variables declaration//GEN-END:variables
}
